// generated by C:/ffxi/server/build/_deps/sqlpp11-src/scripts/ddl2cpp -split-tables -no-timestamp-warning -fail-on-parse -identity-naming xidb.sql ../src/database xidb
#ifndef XIDB_MOB_SKILL_LISTS_H
#define XIDB_MOB_SKILL_LISTS_H

#include <sqlpp11/table.h>
#include <sqlpp11/data_types.h>
#include <sqlpp11/char_sequence.h>

namespace xidb
{
  namespace mob_skill_lists_
  {
    struct skill_list_name
    {
      struct _alias_t
      {
        static constexpr const char _literal[] =  "skill_list_name";
        using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
        template<typename T>
        struct _member_t
          {
            T skill_list_name;
            T& operator()() { return skill_list_name; }
            const T& operator()() const { return skill_list_name; }
          };
      };
      using _traits = sqlpp::make_traits<sqlpp::text, sqlpp::tag::can_be_null>;
    };
    struct skill_list_id
    {
      struct _alias_t
      {
        static constexpr const char _literal[] =  "skill_list_id";
        using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
        template<typename T>
        struct _member_t
          {
            T skill_list_id;
            T& operator()() { return skill_list_id; }
            const T& operator()() const { return skill_list_id; }
          };
      };
      using _traits = sqlpp::make_traits<sqlpp::smallint_unsigned, sqlpp::tag::can_be_null>;
    };
    struct mob_skill_id
    {
      struct _alias_t
      {
        static constexpr const char _literal[] =  "mob_skill_id";
        using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
        template<typename T>
        struct _member_t
          {
            T mob_skill_id;
            T& operator()() { return mob_skill_id; }
            const T& operator()() const { return mob_skill_id; }
          };
      };
      using _traits = sqlpp::make_traits<sqlpp::smallint_unsigned, sqlpp::tag::can_be_null>;
    };
  } // namespace mob_skill_lists_

  struct mob_skill_lists: sqlpp::table_t<mob_skill_lists,
               mob_skill_lists_::skill_list_name,
               mob_skill_lists_::skill_list_id,
               mob_skill_lists_::mob_skill_id>
  {
    struct _alias_t
    {
      static constexpr const char _literal[] =  "mob_skill_lists";
      using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
      template<typename T>
      struct _member_t
      {
        T mob_skill_lists;
        T& operator()() { return mob_skill_lists; }
        const T& operator()() const { return mob_skill_lists; }
      };
    };
  };
} // namespace xidb
#endif
